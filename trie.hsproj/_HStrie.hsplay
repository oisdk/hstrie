-- Haskell Playground 1.0
let l = L.sort ["asodh", "aso", "sbcbsu", "", "apojdnkd"]
let t = fromList l
let f pref = (fmap (pref ++) (toList $ complete pref t)) == (filter (L.isPrefixOf pref) l) 
let g pref = (toList $ begins pref t) == (filter (L.isPrefixOf pref) l) 

count t == length l
l == toList t
check contains (\x -> any (==x)) l
all f (l >>= L.inits)
all g (l >>= L.inits)

