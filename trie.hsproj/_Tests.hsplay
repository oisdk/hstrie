-- Haskell Playground 1.0
let a = Args Nothing 5 10 10 True

quickCheckWith a (equivProp S.null null                              :: [String] ->  Bool           )
quickCheckWith a (equivProp S.size size                              :: [String] ->  Bool           )
quickCheckWith a (equivFunc S.member member (==)                     ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc scomplete complete eqSetTrie             ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc (any . isPrefixOf) hasPref (==)          ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc (any . isSuffixOf) hasSuff (==)          ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc (any . isInfixOf) hasSub (==)            ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc S.insert insert eqSetTrie                ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc stoggle toggle eqSetTrie                 ::  String  -> [String] -> Bool)
quickCheckWith a (equivProp S.toAscList (sort . toList)              :: [String] ->  Bool           )
quickCheckWith a (equivFunc (S.filter . isPrefixOf) begins eqSetTrie ::  String  -> [String] -> Bool)
quickCheckWith a (equivFunc sends ends   eqSetTrie                   ::  String  -> [String] -> Bool)
quickCheckWith a (liftM2 eqSetTrie S.singleton singleton             ::  String  ->  Bool           )
quickCheckWith a (equivMerge S.union union                           :: [String] -> [String] -> Bool)
quickCheckWith a (equivMerge S.difference difference                 :: [String] -> [String] -> Bool)
quickCheckWith a (equivMerge S.intersection intersection             :: [String] -> [String] -> Bool)
quickCheckWith a (equivMerge ssymmetricDiff symmetricDifference      :: [String] -> [String] -> Bool)